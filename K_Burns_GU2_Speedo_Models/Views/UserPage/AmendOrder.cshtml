@model K_Burns_GU2_Speedo_Models.Models.Order

@{
    ViewBag.Title = "Amend Order";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<!--ALERT MESSAGE-->
@if (TempData["AlertMessage"] != null)
{
    <br />

    <div class="alert alert-danger">
        <strong>@TempData["AlertMessage"]</strong>
    </div>

    <br />
}

<!--Displays and deals with the amended order form-->
<h2 class="text-center">@Model.User.Forename's Order To View</h2>

<br />
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid px-4">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                OrderID - @Model.OrderId
            </div>
            <div class="card-body">
                <table id="datatablesSimple">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.OrderLines[0].Product.ProductId)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines[0].Product.ProductName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines[0].Product.Category.CategoryName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines[0].Quantity)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines[0].LineTotal)</th>
                            <th>Save Changes</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.OrderLines.Count; i++)
                        {
                            <tr>
                                <td>@Html.DisplayFor(m => m.OrderLines[i].Product.ProductId)@Html.HiddenFor(m => m.OrderLines[i].Product.ProductId)@Html.HiddenFor(m => m.OrderLines[i].OrderLineId)</td>
                                <td>@Html.DisplayFor(m => m.OrderLines[i].Product.ProductName)@Html.HiddenFor(m => m.OrderLines[i].Product.ProductName)@Html.HiddenFor(m => m.OrderLines[i].ProductId)</td>
                                <td>@Html.DisplayFor(m => m.OrderLines[i].Product.Category.CategoryName)@Html.HiddenFor(m => m.OrderLines[i].Product.Category.CategoryName)</td>
                                <td>@Html.TextBoxFor(m => m.OrderLines[i].Quantity, new { @class = "form-control mb-3" })</td>
                                <td>@Html.DisplayFor(m => m.OrderLines[i].LineTotal)@Html.HiddenFor(m => m.OrderLines[i].LineTotal)@Html.HiddenFor(m => m.OrderLines[i].Order)@Html.HiddenFor(m => m.OrderLines[i].OrderId)</td>
                                <td>
                                    <button class="btn btn-outline-secondary green-btn-sm" type="submit" name="selectedOrderLineId" value="@Model.OrderLines[i].OrderLineId" onclick="return ConfirmationDialog()">SAVE</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center d-inline">

        @if (User.IsInRole("Customer"))
        {
            <p>@Html.ActionLink("Back to Placed Orders", "MyPlacedOrders", null, new { @class = "links-colors" })</p>
        }
        else
        {
            <p>@Html.ActionLink("Back to Placed Orders", "PlacedOrders", null, new { @class = "links-colors" })</p>
        }
    </div>
}

<!--Deals with displaying a popup confirmation window-->
<script type="text/javascript">
    function ConfirmationDialog() {
        if (confirm("Customer will now be charged the new 'Final Total Cost' balance\nAre you sure you wish to proceed?"))
            return true;
        else
            return false;
    }
</script>
