@model K_Burns_GU2_Speedo_Models.Models.Order
@using K_Burns_GU2_Speedo_Models.Models

@{
    ViewBag.Title = "Remove Order";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<!--Deals with remove order form-->

<h2 class="text-center">@Model.User.Forename's Order To View</h2>

<br />
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-fluid px-4">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                OrderID - @Model.OrderId
            </div>
            <div class="card-body">
                <table id="datatablesSimple">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.ProductId)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.ProductName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.Category.CategoryName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Quantity)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().LineTotal)</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.ProductId)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.ProductName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Product.Category.CategoryName)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().Quantity)</th>
                            <th>@Html.DisplayNameFor(model => model.OrderLines.FirstOrDefault().LineTotal)</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model.OrderLines)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Product.ProductId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Product.ProductName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Product.Category.CategoryName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                <td>@Html.DisplayFor(modelItem => item.LineTotal)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <br />

    <div class="d-flex justify-content-center d-inline">

        @if (User.IsInRole("Customer"))
        {
            <p>@Html.ActionLink("Back to Placed Orders", "MyPlacedOrders", null, new { @class = "links-colors" })</p>
        }
        else
        {
            <p>@Html.ActionLink("Back to Placed Orders", "PlacedOrders", null, new { @class = "links-colors" })</p>
        }

        <div class="form-group ms-5">
            <div class="col-md-offset-2 col-md-10">
                <!-- Add the modal trigger button here -->
                @if (Model.Status.Equals(Status.Delivered))
                {
                    <button type="submit" class="btn btn-primary btn-lg btn-block" name="orderId" value="@Model.OrderId" onclick="return DeleteConfirmationDialog()">
                        DELETE
                    </button>
                }
                else
                {
                    <button type="submit" class="btn btn-primary btn-lg btn-block" name="orderId" value="@Model.OrderId" onclick="return CancelConfirmationDialog()">
                        CANCEL
                    </button>
                }

            </div>
        </div>
    </div>

    <!--Both cancel and delete dialogs are pop-up confirmation windows-->
    <script type="text/javascript">
        function CancelConfirmationDialog() {
            if (confirm("You will now be refunded the FULL balance & your order will be cancelled\nAre you sure you wish to proceed?"))
                return true;
            else
                return false;
        }

        function DeleteConfirmationDialog() {
            if (confirm("Your order details and invoice, will now be deleted from the system\nAre you sure you wish to proceed?"))
                return true;
            else
                return false;
        }
    </script>
}
