@model K_Burns_GU2_Speedo_Models.Models.ViewModels.DispatchViewModel

@{
    ViewBag.Title = "Edit Dispatch";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<!--Deals with edit dispatch form-->
<h2 class="text-center">Edit Order Status</h2>

<br />
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h4 class="text-center White-Text">Are you sure you want to edit the order status?</h4>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <h5 class="opacity-50 mb-3">ORDER DETAILS</h5>
                <dl class="row White-Text">
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Order.OrderId)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Order.OrderId)
                        @Html.HiddenFor(model => model.Order.OrderId)
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Order.OrderDate)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Order.OrderDate)
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.OrderLines)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Items)
                    </dd>

                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Order.TotalAmount)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Order.TotalAmount)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.LabelFor(model => model.Order.Status, htmlAttributes: new { @class = "control-label White-Text" })
                    </dt>
                    <dd class="col-sm-8">
                        @Html.EnumDropDownListFor(model => model.Order.Status, new { htmlAttributes = new { @class = "form-control mb-3" } })
                        @Html.ValidationMessageFor(model => model.Order.Status, "", new { @class = "text-danger" })
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <br />

    <div class="d-flex justify-content-center d-inline">
        <p>@Html.ActionLink("Back to Manage Dispatches", "ManageDispatches", null, new { @class = "links-colors" })</p>

        <div class="form-group ms-5">
            <div class="col-md-offset-2 col-md-10">
                <!-- Add the modal trigger button here -->
                <button type="button" class="btn btn-primary btn-lg btn-block" data-bs-toggle="modal" data-bs-target="#removeConfirmModal">
                    SAVE
                </button>
            </div>
        </div>
    </div>

    <!-- Remove Confirm Modal -->
    <div class="modal fade" id="removeConfirmModal" tabindex="-1" aria-labelledby="removeConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="removeConfirmModalLabel">Saving Changes</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="background-color: lightgray">
                    <p>Are you sure you want to make changes to the order status?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <input type="submit" value="SAVE CHANGES" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}
